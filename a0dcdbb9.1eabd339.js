(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{210:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return s})),t.d(r,"metadata",(function(){return i})),t.d(r,"rightToc",(function(){return c})),t.d(r,"default",(function(){return m}));var n=t(1),a=t(9),o=(t(0),t(256)),s={id:"CommunicationTransformer",title:"Conversation Transformer",sidebar_label:"Transformer"},i={id:"CommunicationTransformer",title:"Conversation Transformer",description:"## 1. Overview",source:"@site/docs/Communication - Transformer.md",permalink:"/docs/docs/CommunicationTransformer",editUrl:"https://github.com/Samagra-Development/docs/edit/master/docs/Communication - Transformer.md",sidebar_label:"Transformer",sidebar:"someSidebar",previous:{title:"Conversation Channel Adapters",permalink:"/docs/docs/CommunicationAdapter"},next:{title:"Conversation Logic Manager",permalink:"/docs/docs/CommunicationOrchestrator"}},c=[{value:"1. Overview",id:"1-overview",children:[{value:"1.1 Responsibilities",id:"11-responsibilities",children:[]},{value:"1.2 List of transformers",id:"12-list-of-transformers",children:[]}]},{value:"2. Creating your own Transformer",id:"2-creating-your-own-transformer",children:[]},{value:"3. Properties of a transformer",id:"3-properties-of-a-transformer",children:[]},{value:"4. FAQs",id:"4-faqs",children:[]},{value:"Coming Soon",id:"coming-soon",children:[]}],l={rightToc:c};function m(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"1-overview"},"1. Overview"),Object(o.b)("p",null,"Transformers transforms the previous xMessage from the user to one that needs to be sent next. It is essentially a microservice that based on the previous user action, returns a new xMessage that will then be shown to the user. This also enables conversion from one type"),Object(o.b)("p",null,"All inbound messages pass through a transformer. If a transformer is not assigned, then a null transformer is assigned to the xMessage. Since the current implementation of MessageRosa is only in Java, currently there is a limitation on the number of languages you can build the transformer on which right now is just Java."),Object(o.b)("p",null,"Simply put a transformer looks something like this ",Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"https://samagra-development.github.io/docs/img/transformer.jpg",alt:null}))),Object(o.b)("h3",{id:"11-responsibilities"},"1.1 Responsibilities"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Acts as a state machine and converts messages from one state to another."),Object(o.b)("li",{parentName:"ul"},"Used to transform messages"),Object(o.b)("li",{parentName:"ul"},"Applies conversational logic (constraints or input format)")),Object(o.b)("h3",{id:"12-list-of-transformers"},"1.2 List of transformers"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Form transformer"),Object(o.b)("li",{parentName:"ul"},"Menu transformer"),Object(o.b)("li",{parentName:"ul"},"PDF transformer")),Object(o.b)("h2",{id:"2-creating-your-own-transformer"},"2. Creating your own Transformer"),Object(o.b)("p",null,"All transformers are named as ",Object(o.b)("inlineCode",{parentName:"p"},"<Action>Transformer"),"; for example PDFTransformer will create generate a PDF from the previous XMessage and convert it to an XMessage. Adapters should extend ",Object(o.b)("inlineCode",{parentName:"p"},"TransformerProvider"),". Thus, it needs to implement the following methods:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"  public XMessage transform(XMessage nextMsg) //Takes in XMessage and return the next message.\n")))),Object(o.b)("p",null,"All transformers with the above implementation will be valid. An example adapter can be found ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:""}),"here"),"."),Object(o.b)("h2",{id:"3-properties-of-a-transformer"},"3. Properties of a transformer"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Transformers could call external services and wait for resposes from them to process message. These transformers are called ",Object(o.b)("inlineCode",{parentName:"li"},"call-only")," transformer. An example of this transformer is the PDF service transformer which calls the PDF service to check the status of queue of previous message and responds with a response containing PDF for the user."),Object(o.b)("li",{parentName:"ul"},"All transformers need to be registered. All unregistered transformers will not be acted upon. This is what essentially adds a topic to broker on which the messages are pushed. Also this requires some basic config of the max time a transformer could take to process the message."),Object(o.b)("li",{parentName:"ul"},"Scaling of transformers is done horizontally but the broker needs to know the number so tha partitions can be reconfigured."),Object(o.b)("li",{parentName:"ul"},"Since it's part of a state machine. If the transformer is stuck it needs communicate to the Orchestrator to that it can be escalate.")),Object(o.b)("h2",{id:"4-faqs"},"4. FAQs"),Object(o.b)("p",null,"To be updated based on incoming feedback. Feel free to write into tech@samagragovernance.in in case you have questions, feedback or want to know more!"),Object(o.b)("h2",{id:"coming-soon"},"Coming Soon"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"RASA based transformer.")))}m.isMDXComponent=!0},256:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return f}));var n=t(0),a=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),m=function(e){var r=a.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i({},r,{},e)),t},u=function(e){var r=m(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},p=Object(n.forwardRef)((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(t),p=n,f=u["".concat(s,".").concat(p)]||u[p]||b[p]||o;return t?a.a.createElement(f,i({ref:r},l,{components:t})):a.a.createElement(f,i({ref:r},l))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=p;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);