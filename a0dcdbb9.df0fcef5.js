(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{201:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return i})),n.d(r,"metadata",(function(){return s})),n.d(r,"rightToc",(function(){return c})),n.d(r,"default",(function(){return m}));var t=n(1),a=n(9),o=(n(0),n(238)),i={id:"CommunicationTransformer",title:"Conversation Transformer",sidebar_label:"Transformer"},s={id:"CommunicationTransformer",title:"Conversation Transformer",description:"## 1. Overview",source:"@site/docs/Communication - Transformer.md",permalink:"/docs/docs/CommunicationTransformer",editUrl:"https://github.com/Samagra-Development/docs/edit/master/docs/Communication - Transformer.md",sidebar_label:"Transformer",sidebar:"someSidebar",previous:{title:"Conversation Channel Adapters",permalink:"/docs/docs/CommunicationAdapter"},next:{title:"Conversation Logic Manager",permalink:"/docs/docs/CommunicationOrchestrator"}},c=[{value:"1. Overview",id:"1-overview",children:[{value:"Responsibilities",id:"responsibilities",children:[]}]},{value:"2. Creating your own Transformer",id:"2-creating-your-own-transformer",children:[]},{value:"4. FAQs",id:"4-faqs",children:[]},{value:"Coming Soom",id:"coming-soom",children:[]}],l={rightToc:c};function m(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"1-overview"},"1. Overview"),Object(o.b)("p",null,"Transformers transforms the previous xMessage from the user to one that needs to be sent next. It is essentially a microservice that based on the previous user action, returns a new xMessage that will then be shown to the user. This also enables conversion from one type"),Object(o.b)("p",null,"All inbound messages pass through a transformer. If a transformer is not assigned, then a null transformer is assigned to the xMessage. Since the current implementation of MessageRosa is only in Java, currently there is a limitation on the number of languages you can build the transformer on which right now is just Java."),Object(o.b)("h3",{id:"responsibilities"},"Responsibilities"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Acts as a state machine and converts messages from one state to another."),Object(o.b)("li",{parentName:"ul"},"Used to transform messages"),Object(o.b)("li",{parentName:"ul"},"Applies conversational logic (constraints or input format)")),Object(o.b)("h2",{id:"2-creating-your-own-transformer"},"2. Creating your own Transformer"),Object(o.b)("p",null,"All transformers are named as ",Object(o.b)("inlineCode",{parentName:"p"},"<Action>Transformer"),"; for example PDFTransformer will create generate a PDF from the previous XMessage and convert it to an XMessage. Adapters should extend ",Object(o.b)("inlineCode",{parentName:"p"},"TransformerProvider"),". Thus, it needs to implement the following methods:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-java"}),"  public XMessage transform(XMessage nextMsg) //Takes in XMessage and return the next message.\n")))),Object(o.b)("p",null,"All transformers with the above implementation will be valid. An example adapter can be found ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:""}),"here"),"."),Object(o.b)("h2",{id:"4-faqs"},"4. FAQs"),Object(o.b)("h2",{id:"coming-soom"},"Coming Soom"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"RASA based transformer.")))}m.isMDXComponent=!0},238:function(e,r,n){"use strict";n.d(r,"a",(function(){return u})),n.d(r,"b",(function(){return f}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),m=function(e){var r=a.a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):s({},r,{},e)),n},u=function(e){var r=m(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=Object(t.forwardRef)((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(n),b=t,f=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return n?a.a.createElement(f,s({ref:r},l,{components:n})):a.a.createElement(f,s({ref:r},l))}));function f(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);